@model PowerBIEmbedded_AppOwnsData.Models.EmbedConfig
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://npmcdn.com/es6-promise@3.2.1"></script>
<script src="~/scripts/powerbi.js"></script>
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div id="errorWrapper">
        <h2>
            Error
        </h2>
        <pre>
            @Model.ErrorMessage
        </pre>
    </div>

    return;
}
<h2>Embedded Report</h2>
<div>
    The following report is the first report found in the given group, or the reportId defined in Web.config. Feel free to change the code to match your needs.<br /><br />
    @using (Html.BeginForm())
    {
        <div>
            <input type="checkbox" id="RLS" disabled>
            <label for="RLS">View as a different user</label>
        </div>
        <div id="noRLSdiv">
            <h8>This checkbox is disabled because the current report does not support providing effective user name</h8>
            <br />
            <h8>For more info, visit RLS link in the bottom of the page</h8>
        </div>
        <div id="RLSdiv" hidden="hidden">
            <div class="inputLineTitle">User name</div>
            <input type="text" name="username" value="@Model.Username" />
            <h8>User name is always required for RLS.</h8>
            <div class="inputLineTitle">Roles</div>
            <input type="text" name="roles" value="@Model.Roles" />
            <h8>Comma separeted roles, optional for SSAS, mandatory for roles defined in pbix</h8>
            <br /><br />
            <input type="submit" value="Reload" />
            <br /><br />
        </div>
    }
</div>
<p>
    Select report type:<br />
    <input type="radio" id="compareCompaniesReportType" name="ReportType" value="Compare Companies" onchange="onReportTypeChange(this)" />Compare Companies<br />
    <input type="radio" id="companyByYearReportType" name="ReportType" value="Company By Year" checked onchange="onReportTypeChange(this)" />Company by Year<br />
    <input type="radio" id="accountsByClassesReportType" name="ReportType" checked value="Accounts By Classes" onchange="onReportTypeChange(this)" />Accounts By Classes<br />
</p>

<div>
    <div id="reportContainer"></div>
    <div id="filterContainer">
        <h2>Filters</h2>
        <label for="Year">Year</label>
        <select id="Year" onchange="onFiltersChange()">
            <option value="ALL" selected>All years</option>
            <option value="2015">2015</option>
            <option value="2016">2016</option>
            <option value="2017">2017</option>
            <option value="2018">2018</option>
        </select><br/>
        <label for="Entity">Entity</label>
        <select id="Entity" onchange="onFiltersChange()">
            <option value="193514531543839" selected>Deltennium Clips Inc. - All classes</option>
            <option value="193514531543839:800000000000580647">---Officer-Gerry</option>
            <option value="193514531543839:800000000000580648">---Deltennium Group</option>
            <option value="193514531543839:Officer-Robyn">---Officer-Robyn</option>
            <option value="193514531543839:Not Specified">---Not Specified</option>
            
            <option value="111514531541111" >Testico - All classes</option>
            <option value="111514531541111:1">---Class A</option>
            <option value="111514531541111:2">---Class B</option>
        </select>
    </div>

</div>
<div class="infoBox">
    Code is in files:<br />
    1) HomeController.cs<br />
    2) EmbedReport.cshtml
</div>
@Html.Partial("LiveDemoLink")
<script>
    function createGlIdFilter(glId) {
        var selectedReportType = getSelectedReportType();

        if (selectedReportType == "Compare Companies") {
            return {
                $schema: "http://powerbi.com/product/schema#basic",
                target: {
                    table: "ProfitAndLossFacts",
                    column: "GlId"
                },
                operator: "In",
                values: [glId]
            };
        }
        else if (selectedReportType == "Company By Year") {
            return {
                $schema: "http://powerbi.com/product/schema#basic",
                target: {
                    table: "ProfitAndLossFactsByYear",
                    column: "GlId"
                },
                operator: "In",
                values: [glId]
            };
        }
        else if (selectedReportType == "Accounts By Classes") {
            return {
                $schema: "http://powerbi.com/product/schema#basic",
                target: {
                    table: "ProfitAndLossFactsByClass",
                    column: "GlId"
                },
                operator: "In",
                values: [glId]
            };
        }
    }

    function createEntityFilters(glId, classId) {
        var selectedReportType = getSelectedReportType();

        if (typeof glId == "undefined" && typeof classId == "undefined") {
            var selectedEntity = getSelectedEntity();
            glId = selectedEntity.glId;
            classId = selectedEntity.classId;
        }

        var glIdFilter = createGlIdFilter(glId);

        if (typeof classId == "undefined") {
            return [glIdFilter];
        }

        var classIdFilter;

        if (selectedReportType == "Compare Companies") {
            classIdFilter = {
                $schema: "http://powerbi.com/product/schema#basic",
                target: {
                    table: "ProfitAndLossFacts",
                    column: "ClassId"
                },
                operator: "In",
                values: [classId]
            };
        }
        else if (selectedReportType == "Accounts By Classes") {
            classIdFilter =  {
                $schema: "http://powerbi.com/product/schema#basic",
                target: {
                    table: "ProfitAndLossFactsByClass",
                    column: "ClassId"
                },
                operator: "In",
                values: [classId]
            };
        }
        else if (selectedReportType == "Company By Year") {
            // Class filter is not applicable
            return [glIdFilter];
        }

        return [glIdFilter, classIdFilter];
    }

    function createYearFilter() {
        var year = $("#Year").val();

        if (year == "ALL") {
            return;
        }

        var selectedReportType = getSelectedReportType();

        if (selectedReportType == "Compare Companies") {
            return {
                $schema: "http://powerbi.com/product/schema#advanced",
                target: {
                    table: "ProfitAndLossFacts",
                    column: "StartDateYear"
                },
                logicalOperator: "And",
                conditions: [
                    {
                        operator: "Is",
                        value: year
                    }
                ],
            };
        }
        else if (selectedReportType == "Company By Year") {
            return {
                $schema: "http://powerbi.com/product/schema#advanced",
                target: {
                    table: "ProfitAndLossFactsByYear",
                    column: year
                },
                logicalOperator: "And",
                conditions: [
                    {
                        operator: "IsNotBlank",
                        value: year
                    }
                ],
            };
        }
        else if (selectedReportType == "Accounts By Classes") {
            return {
                $schema: "http://powerbi.com/product/schema#advanced",
                target: {
                    table: "ProfitAndLossFactsByClass",
                    column: "StartDateYear"
                },
                logicalOperator: "And",
                conditions: [
                    {
                        operator: "Is",
                        value: year
                    }
                ],
            };
        }
    }

    function getSelectedEntity() {
        var entity = $("#Entity").val();
        var parts = entity.split(":");
        return {
            glId: parts[0],
            classId: parts[1]
        };
    }

    function onFiltersChange() {
        var filters = createEntityFilters();
        var yearFilter = createYearFilter();

        if (typeof yearFilter != "undefined") {
            filters.push(yearFilter);
        }

        setFilters(filters);
    }

    function onReportTypeChange(e) {
        var reportName = e.value;

        embedReport(reportName);
    }

    function setFilters(filters) {
        // Get a reference to the embedded report HTML element
        var embedContainer = $('#reportContainer')[0];

        // Get a reference to the embedded report.
        report = powerbi.get(embedContainer);

        // Set the filter for the report.
        // Pay attention that setFilters receives an array.
        report.setFilters(filters)
            .catch(function (errors) {
                alert(JSON.stringify(errors));
            });
    }

    $(function () {
  
    });

    function getSelectedReportType() {
        if ($("#compareCompaniesReportType").prop("checked")) {
            return "Compare Companies";
        }
        else if ($("#companyByYearReportType").prop("checked")) {
            return "Company By Year";
        }
        else return "Accounts By Classes";
    }

    function getReportModelByName(reportName) {
        var reportModel = reportModels.find(
            function (element, index, array) { return element.Name === reportName; });
        return reportModel;
    }

    function embedReport(reportName) {
        var reportModel = getReportModelByName(reportName);

        $.get("@Url.Action("GetReportEmbedToken", "Home")", { reportId: reportModel.Id },
            function (embedToken)
            {
                // Get models. models contains enums that can be used.
                var models = window['powerbi-client'].models;

                // Embed configuration used to describe the what and how to embed.
                // This object is used when calling powerbi.embed.
                // This also includes settings and options such as filters.
                // You can find more information at https://github.com/Microsoft/PowerBI-JavaScript/wiki/Embed-Configuration-Details.
                var config = {
                    type: 'report',
                    tokenType: models.TokenType.Embed,
                    accessToken: embedToken,
                    embedUrl: reportModel.EmbedUrl,
                    id: reportModel.Id,
                    permissions: models.Permissions.All,
                    filters: createEntityFilters(),
                    settings: {
                        filterPaneEnabled: true,
                        navContentPaneEnabled: true
                    }
                };

                // Get a reference to the embedded report HTML element
                var reportContainer = $('#reportContainer')[0];

                // Embed the report and display it within the div container.
                var report = powerbi.embed(reportContainer, config);
            });

        @*if ("@Model.Username" != "") {
            $("#RLS").prop('checked', true);
            $("#RLSdiv").show();
        }
        else
        {
            $("#RLS").prop('checked', false);
            $("#RLSdiv").hide();
        }

        if ("@Model.IsEffectiveIdentityRequired.GetValueOrDefault()" == "True") {
            $("#noRLSdiv").hide();
            $("#RLS").removeAttr("disabled");
            $("#RLS").change(function () {
                if ($(this).is(":checked")) {
                    $("#RLSdiv").show(300);
                } else {
                    $("#RLSdiv").hide(200);
                }
            });
        }
        else
        {
            $("#noRLSdiv").show();
            }*@
    }

</script>

<script>
    @*// Read embed application token from Model
    var accessToken = "@Model.EmbedToken.Token";

    // Read embed URL from Model
    var embedUrl = "@Html.Raw(Model.EmbedUrl)";

    // Read report Id from Model
    var embedReportId = "@Model.Id";*@

    var reportModels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Reports));

    // var initialReportModel = getReportModelByName("Company By Year");

    embedReport("Accounts By Classes");
</script>